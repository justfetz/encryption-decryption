type: edu
custom_name: stage4
files:
  - name: test/EncryptDecryptTest.java
    visible: false
    text: |
      import encryptdecrypt.Main;
      import org.hyperskill.hstest.stage.StageTest;
      import org.hyperskill.hstest.testcase.CheckResult;
      import org.hyperskill.hstest.testcase.TestCase;
      
      import java.util.List;
      
      public class EncryptDecryptTest extends StageTest<String> {
          public EncryptDecryptTest() {
              super(Main.class);
          }
      
          @Override
          public List<TestCase<String>> generate() {
              return List.of(
                  new TestCase<String>()
                      .addArguments(
                          "-mode", "enc",
                          "-key", "5",
                          "-data", "Welcome to hyperskill!"
                      )
                      .setAttach("\\jqhtrj%yt%m~ujwxpnqq&"),
      
                  new TestCase<String>()
                      .addArguments(
                          "-key", "0",
                          "-mode", "enc",
                          "-data", "Hello"
                      )
                      .setAttach("Hello"),
      
                  new TestCase<String>()
                      .addArguments(
                          "-key", "1",
                          "-data", "012345678",
                          "-mode", "enc"
                      )
                      .setAttach("123456789"),
      
                  new TestCase<String>()
                      .addArguments(
                          "-mode", "dec",
                          "-data", "\\jqhtrj%yt%m~ujwxpnqq&",
                          "-key", "5"
                      )
                      .setAttach("Welcome to hyperskill!"),
      
                  new TestCase<String>()
                      .addArguments(
                          "-mode", "dec",
                          "-key", "0",
                          "-data", "Hi"
                      )
                      .setAttach("Hi"),
      
                  new TestCase<String>()
                      .addArguments(
                          "-mode", "dec",
                          "-key", "1",
                          "-data", "222233334444"
                      )
                      .setAttach("111122223333")
              );
          }
      
          @Override
          public CheckResult check(String reply, String clue) {
              return new CheckResult(reply.trim().equals(clue.trim()));
          }
      }
    learner_created: false
  - name: src/encryptdecrypt/Main.java
    visible: true
    text: "package encryptdecrypt;\nimport java.util.Scanner;\nimport java.lang.*;\n\
    \npublic class Main {\n    \n    public static StringBuffer encrypt(String text,\
    \ int s) \n    { \n        StringBuffer result = new StringBuffer(); \n  \n  \
    \      for (int i = 0; i < text.length(); i++) \n        { \n            //System.out.println(text.charAt(i));\n\
    \            //System.out.println((int) text.charAt(i));\n            //System.out.println(((int)text.charAt(i)\
    \ + s - 97) % 26 + 97);\n            if (Character.isUpperCase(text.charAt(i)))\
    \ \n            { \n                char ch = (char)(((int)text.charAt(i) + \n\
    \                                  s) % 128); \n                result.append(ch);\
    \ \n            } /*else  if (Character.isWhitespace(text.charAt(i)))\n      \
    \      {\n                System.out.println((int) text.charAt(i));\n        \
    \        result.append('%');\n            } else if (text.charAt(i) == '!') {\n\
    \                System.out.println((int) text.charAt(i));\n                result.append(\"\
    &\");\n            }*/\n            else\n            {  \n                //System.out.println(text.charAt(i));\n\
    \                //System.out.println((int) text.charAt(i));\n               \
    \ //System.out.println(((int)text.charAt(i) + s - 97) % 26 + 97);\n          \
    \      char ch = (char)(((int)text.charAt(i) + \n                            \
    \      s) % 128); \n                result.append(ch); \n            } \n    \
    \    } \n        return result; \n    } \n     public static StringBuffer decrypt(String\
    \ text, int s) \n    { \n        StringBuffer result = new StringBuffer(); \n\
    \  \n        for (int i=0; i<text.length(); i++) \n        { \n            if\
    \ (Character.isUpperCase(text.charAt(i))) \n            { \n                //System.out.println((int)\
    \ text.charAt(i));\n                char ch = (char)(((int)text.charAt(i) - \n\
    \                                  s) % 128); \n                result.append(ch);\
    \ \n            } \n            else\n            { \n                char ch\
    \ = (char)(((int)text.charAt(i) - \n                                  s) % 128);\
    \ \n                result.append(ch); \n            } \n        } \n        return\
    \ result; \n    } \n    public static void main(String[] args) {\n      Scanner\
    \ s = new Scanner(System.in);\n      String targetOp = s.nextLine();\n      String\
    \ str = s.nextLine();\n      int shift = s.nextInt();\n      if(targetOp.equals(\"\
    enc\")) {\n          System.out.println(encrypt(str, shift));\n      } else if\
    \ (targetOp.equals(\"dec\")) {\n        System.out.println(decrypt(str, shift));\n\
    \      }\n    }\n}\n"
    learner_created: false
feedback_link: https://hyperskill.org/learn/step/5390#comment
status: Solved
record: 3
